// Voicer
Voicer(1, {
    arg e;
    var freq = (e.x * [25, LFNoise2(0.25) * 0.25 + 25] + 48).midiCps;
    Pan2(RLPF(Saw(freq), e.y + 0.75 * freq, e.y * 0.5).sum, e.o * 2 - 1, e.w * e.z)
}).sum * 0.25

//---- notes.md
Voicer, located in the _Event_ cateory of the toolbox, defines an array of # (_count_) places.
Each place is generated by evaluating 𝑓 (_proc_) at a distinct 𝔼 (_event_).

𝔼 is a set of named control signals, each in the range _(0, 1)_.
Signals at 𝔼 are read using 𝔼 (_EventParam_), and selecting the required signal from a menu.
The set of signals at each 𝔼 is:

- _w_: a _gate_, set to 1 when the event is initiated and set to 0 when it is released
- _x_, _y_, _z_: three _location_ signals, ordinarily _x_ is a _left-right_ position, _y_ is a _front-back_ position and _z_ is pressure
- _o_, _rx_, _ry_: three _point_ signals, ordinarily _o_ is orientation, and _rx_ & _ry_ are radiuses
- _p_, _px_: two derived linear pitch values, _p_ is unit midi note number and _px_ is linear detune

In this program the _w_, _x_, _y_, _z_ and _o_ signals are read.

The ν (_frequency_) of a ◿ (_Saw_) oscillator is given by _x_.
This frequency is scaled by _y_ to give the cutoff frequency of a ⋏⬔ (_RLPF_) filter.
The ⌖ (_pos_) input of a ⌖₂ (_Pan2_) is given by _o_, and the × (_level_) by _z_.

_x_ is scaled and offset to the range (48, 72),
which in midi note numbers is the two octaves about middle C.
The scaling is combined with a slighty stretched and noise modulated variation.
This idiom (_e.x * m + a_) is very common, and there is an entry for it in the toolbox.

_z_ is multiplied by _w_ since _z_ may retain the pressure level the voice had immediately prior to release.
This idiom (_e.w * e.z_) is also very common, and there is also an entry for it in the toolbox.
