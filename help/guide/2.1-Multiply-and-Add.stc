// Multiply and Add
(PinkNoise() * [0.1, 0.1]) + ({ PinkNoise() }.dup(2) * 0.1)

//---- notes.md
All blocks with an output connection have multiplier (×) and adder (+) inputs.

These inputs, initialised to one and zero respectively, allow adjusting the scale and bias of blocks without introducing an extra block.

These adjustments are made to the block after it is defined.

This means that, in constrast to the SuperCollider language forms,
the × and + inputs don't form part of the multiple channel expansion protocol for the block,

In SuperCollider the expression

> _PinkNoise(mul: [0.1, 0.1])_

describes a graph with two PinkNoise generators.
The left and right channels are decorrelated.

The equivalent block program has only one _PinkNoise_ generator.
