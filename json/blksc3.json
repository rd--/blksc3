[
    {
        "type": "sc3_Comment",
        "message0": "✐ %1",
        "args0": [
            {"type": "field_input", "name": "COMMENT", "text": ""}
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 300,
        "tooltip": "Comment(text): Workspace comment"
    }
    ,
    {
        "type": "sc3_Play",
        "message0": "▷ %1",
        "args0": [
            {"type": "input_value", "name": "CODE",  "check": ["Array", "UGen"]}
        ],
        "previousStatement": null,
        "colour": 300,
        "tooltip": "Play(code): Play sound"
    }
    ,
    {
        "type": "sc3_Constant",
        "message0": "%1",
        "args0": [{"type": "field_dropdown", "name": "CONST", "options": [["π", "pi"], ["2×π", "twoPi"], ["𝑒", "e"], ["∞", "inf"]]}],
        "output": "Number",
        "colour": 230,
        "tooltip": "Constant(n): Mathematical constants, such as π."
    }
    ,
    {
        "type": "sc3_Value0",
        "message0": "⇐ 𝑓 %1",
        "args0": [
            {"type": "input_value", "name": "PROC", "check": ["Proc0"]}
        ],
        "output": null,
        "colour": 180,
        "tooltip": "Value(proc): Evaluate zero argument procedure"
    }
    ,
    {
        "type": "sc3_Value1",
        "message0": "⇐ 𝑓 %1 ∙ %2",
        "args0": [
            {"type": "input_value", "name": "PROC", "check": ["Proc1"]},
            {"type": "input_value", "name": "VALUE"}
        ],
        "output": null,
        "colour": 180,
        "tooltip": "Value(proc, value): Evaluate one argument procedure"
    }
    ,
    {
        "type": "sc3_TimesRepeat",
        "message0": "# %1 𝑓 %2",
        "args0": [
            {"type": "input_value", "name": "COUNT", "check": "Number"},
            {"type": "input_value", "name": "PROC", "check": "Proc0"}
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 180,
        "tooltip": "TimesRepeat(count, proc): Repeat procedure indicated number of times"
    }
    ,
    {
        "type": "sc3_ArrayFromTo",
        "message0": "%1 to %2",
        "args0": [
            {"type": "input_value", "name": "FROM", "check": ["Number", "UGen"]},
            {"type": "input_value", "name": "TO", "check": ["Number", "UGen"]}
        ],
        "output": "Array",
        "colour": 260,
        "tooltip": "ArrayFromTo(from, to): Array of consecutive numbers"
    }
    ,
    {
        "type": "sc3_ArrayProc1",
        "message0": "%1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["asLocalBuf","asLocalBuf"],  ["⚂","choose"], ["++","concatenation"], ["1º","first"], ["mean", "mean"], ["ᴙ","reverse"], ["2º","second"], ["size","size"], ["Σ","sum"], ["3º","third"], ["ᵀ","transpose"]]},
            {"type": "input_value", "name": "IN", "check": ["Array", "UGen"]}
        ],
        "output": null,
        "colour": 260,
        "tooltip": "ArrayProc1(op, in): Array functions"
    }
    ,
    {
        "type": "sc3_ArrayProc2",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["++","append"], ["⇛","collect"], ["☞","nth"]]},
            {"type": "input_value", "name": "LHS"},
            {"type": "input_value", "name": "RHS"}
        ],
        "output": "UGen",
        "colour": 260,
        "tooltip": "ArrayProc2(op, lhs, rhs): Array binary functions"
    }
    ,
    {
        "type": "sc3_ArrayCollect",
        "message0": "%1 ⇛ %2",
        "args0": [
            {"type": "input_value", "name": "ARRAY", "check": ["Array", "UGen"]},
            {"type": "input_value", "name": "PROC", "check": "Proc1"}
        ],
        "output": "Array",
        "colour": 260,
        "tooltip": "ArrayCollect(array, proc): Collect over array by evaluating proc once for each place"
    }
    ,
    {
        "type": "sc3_UnaryOp",
        "message0": "%1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["|", "abs"], ["⌈", "ceil"], ["clearBuf", "clearBuf"], ["ν→♩", "cpsMidi"], ["cubed","cubed"], ["㏈→×","dbAmp"], ["distort","distort"], ["𝑒ⁿ","exp"], ["⌊", "floor"], ["kr","kr"], ["log","log"], ["♩→ν", "midiCps"], ["-","negated"], ["∏","product"], ["rand2","rand2"], ["¹⁄","reciprocal"], ["⌊⌉","rounded"], ["∿","sin"], ["softClip","softClip"], ["◠₂", "splay2"], ["√","sqrt"], ["tanh","tanh"], ["₀¹→ν", "unitCps"]]},
            {"type": "input_value", "name": "IN", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "UnaryOp(op, in): Unary operators"
    }
    ,
    {
        "type": "sc3_BinaryOp",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["+", "+"], ["-","-"], ["×", "*"], ["÷","/"], ["%","%"], ["𝑥ⁿ","**"], ["<","<"], [">",">"], ["≤","<="], ["≥",">="], ["<<","<<"], ["→", "->"]]},
            {"type": "input_value", "name": "LHS", "check": ["Number", "Array", "UGen", "Boolean", "String"]},
            {"type": "input_value", "name": "RHS", "check": ["Number", "Array", "UGen", "Boolean", "String"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "BinaryOp(op, lhs, rhs): Binary operators"
    }
    ,
    {
        "type": "sc3_MulAdd",
        "message0": "%1 × %2 + %3",
        "args0": [
            {"type": "input_value", "name": "IN", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "MUL", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "ADD", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "MulAdd(in, mul, add): Multiply and add, i.e. in * mul + add.",
        "helpUrl": "https://doc.sccode.org/Classes/MulAdd.html"
    }
    ,
    {
        "type": "sc3_KeywordBinaryOp",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["amClip", "amClip"], ["&", "bitAnd"], ["|", "bitOr"], ["»","bitShiftRight"], ["⊏","clip2"], ["clump", "clump"], ["fromAssocArray","fromAssocArray"], ["⏥", "lag"], ["⏥⏥", "lag2"], ["⏥⏥⏥", "lag3"], ["⌊", "min"], ["⌈","max"], ["⅄","mrg"], ["⌊⌉","roundTo"], ["truncateTo","truncateTo"]]},
            {"type": "input_value", "name": "LHS", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "RHS", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "Keyword binary operators"
    }
    ,
    {
        "type": "sc3_EventParam",
        "message0": "𝔼 %1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "PARAM", "options": [["#", "v"], ["𝑤","w"], ["𝑥","x"], ["𝑦", "y"], ["𝑧","z"], ["𝑜","o"], ["𝑟𝑥","rx"], ["𝑟𝑦", "ry"], ["𝑝", "p"], ["𝑝𝑥", "px"]]},
            {"type": "input_value", "name": "EVENT"}
        ],
        "output": "UGen",
        "colour": 60,
        "tooltip": "EventParam(param, event): Read voice event parameter"
    }
]
