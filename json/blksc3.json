[
    {
        "type": "sc3_Comment",
        "message0": "‚úê %1",
        "args0": [
            {"type": "field_input", "name": "COMMENT", "text": ""}
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 300,
        "tooltip": "Comment(text): Workspace comment"
    }
    ,
    {
        "type": "sc3_Play",
        "message0": "üîä %1",
        "args0": [
            {"type": "input_value", "name": "CODE",  "check": ["Array", "UGen"]}
        ],
        "previousStatement": null,
        "colour": 300,
        "tooltip": "Play(code): Play sound"
    }
    ,
    {
        "type": "sc3_Constant",
        "message0": "%1",
        "args0": [{"type": "field_dropdown", "name": "CONST", "options": [["œÄ", "pi"], ["2√óœÄ", "twoPi"], ["ùëí", "e"], ["‚àû", "inf"]]}],
        "output": "Number",
        "colour": 230,
        "tooltip": "Constant(n): Mathematical constants, such as œÄ."
    }
    ,
    {
        "type": "sc3_Proc0",
        "message0": "Œª %1 ‚Üê %2",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc0",
        "colour": 180,
        "tooltip": "Proc(return): Zero argument procedure"
    }
    ,
    {
        "type": "sc3_Value0",
        "message0": "‚áê ùëì %1",
        "args0": [
            {"type": "input_value", "name": "PROC", "check": ["Proc0"]}
        ],
        "output": null,
        "colour": 180,
        "tooltip": "Value(proc): Evaluate zero argument procedure"
    }
    ,
    {
        "type": "sc3_Proc1",
        "message0": "Œª %1 ‚çµ %2 ‚Üê %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "VAR"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc1",
        "colour": 180,
        "tooltip": "Proc(var, return): One argument procedure setting arg to var"
    }
    ,
    {
        "type": "sc3_Value1",
        "message0": "‚áê ùëì %1 ‚àô %2",
        "args0": [
            {"type": "input_value", "name": "PROC", "check": ["Proc1"]},
            {"type": "input_value", "name": "VALUE"}
        ],
        "output": null,
        "colour": 180,
        "tooltip": "Value(proc, value): Evaluate one argument procedure"
    }
    ,
    {
        "type": "sc3_Proc0Stm",
        "message0": "Œª %1 ‚Ä¶ %2 ‚Üê %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_statement", "name": "STATEMENTS"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc0",
        "colour": 180,
        "tooltip": "Proc(statements, return): Zero argument procedure, with statements"
    }
    ,
    {
        "type": "sc3_Proc1Stm",
        "message0": "Œª %1 ‚çµ %2 ‚Ä¶ %3 ‚Üê %4",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "VAR"},
            {"type": "input_statement", "name": "STATEMENTS"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc1",
        "colour": 180,
        "tooltip": "Proc(var, statements, return): One argument procedure, with statements"
    }
    ,
    {
        "type": "sc3_TimesRepeat",
        "message0": "# %1 ùëì %2",
        "args0": [
            {"type": "input_value", "name": "COUNT", "check": "Number"},
            {"type": "input_value", "name": "PROC", "check": "Proc0"}
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 180,
        "tooltip": "TimesRepeat(count, proc): Repeat procedure indicated number of times"
    }
    ,
    {
        "type": "sc3_OverlapTexture",
        "message0": "·®è %1 ùëì %2 ‚åí %3 ‚§¢ %4 # %5",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "PROC", "check": "Proc1"},
            {"type": "input_value", "name": "SUSTAINTIME", "check": "Number"},
            {"type": "input_value", "name": "TRANSITIONTIME", "check": "Number"},
            {"type": "input_value", "name": "OVERLAP", "check": "Number"}
        ],
        "output": "UGen",
        "colour": 180,
        "tooltip": "OverlapTexture(proc, sustainTime, transitionTime, overlap): Overlap add texture"
    }
    ,
    {
        "type": "sc3_ArrayFromTo",
        "message0": "%1 to %2",
        "args0": [
            {"type": "input_value", "name": "FROM", "check": ["Number", "UGen"]},
            {"type": "input_value", "name": "TO", "check": ["Number", "UGen"]}
        ],
        "output": "Array",
        "colour": 260,
        "tooltip": "ArrayFromTo(from, to): Array of consecutive numbers"
    }
    ,
    {
        "type": "sc3_ArrayFill",
        "message0": "! %1 ùëì %2 # %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "PROC", "check": "Proc0"},
            {"type": "input_value", "name": "COUNT", "check": ["Number", "UGen"]}
        ],
        "output": "Array",
        "colour": 260,
        "tooltip": "ArrayFill(proc, count): Array of count places, evaulating proc to generate a value for each place"
    }
    ,
    {
        "type": "sc3_ArrayProc1",
        "message0": "%1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["asLocalBuf","asLocalBuf"],  ["‚öÇ","choose"], ["++","concatenation"], ["1¬∫","first"], ["mean", "mean"], ["·¥ô","reverse"], ["2¬∫","second"], ["size","size"], ["Œ£","sum"], ["3¬∫","third"], ["·µÄ","transpose"]]},
            {"type": "input_value", "name": "IN", "check": ["Array", "UGen"]}
        ],
        "output": null,
        "colour": 260,
        "tooltip": "ArrayProc1(op, in): Array functions"
    }
    ,
    {
        "type": "sc3_ArrayProc2",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["++","append"], ["‚áõ","collect"], ["‚òû","nth"]]},
            {"type": "input_value", "name": "LHS"},
            {"type": "input_value", "name": "RHS"}
        ],
        "output": "UGen",
        "colour": 260,
        "tooltip": "ArrayProc2(op, lhs, rhs): Array binary functions"
    }
    ,
    {
        "type": "sc3_ArrayCollect",
        "message0": "%1 ‚áõ %2",
        "args0": [
            {"type": "input_value", "name": "ARRAY", "check": ["Array", "UGen"]},
            {"type": "input_value", "name": "PROC", "check": "Proc1"}
        ],
        "output": "Array",
        "colour": 260,
        "tooltip": "ArrayCollect(array, proc): Collect over array by evaluating proc once for each place"
    }
    ,
    {
        "type": "sc3_UnaryOp",
        "message0": "%1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["|", "abs"], ["‚åà", "ceil"], ["clearBuf", "clearBuf"], ["ŒΩ‚Üí‚ô©", "cpsMidi"], ["cubed","cubed"], ["„èà‚Üí√ó","dbAmp"], ["distort","distort"], ["ùëí‚Åø","exp"], ["‚åä", "floor"], ["kr","kr"], ["log","log"], ["‚ô©‚ÜíŒΩ", "midiCps"], ["-","negated"], ["‚àè","product"], ["¬π‚ÅÑ","reciprocal"], ["‚åä‚åâ","rounded"], ["‚àø","sin"], ["softClip","softClip"], ["‚ó†‚ÇÇ", "splay2"], ["‚àö","sqrt"], ["tanh","tanh"], ["‚ÇÄ¬π‚ÜíŒΩ", "unitCps"]]},
            {"type": "input_value", "name": "IN", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "UnaryOp(op, in): Unary operators"
    }
    ,
    {
        "type": "sc3_BinaryOp",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["+", "+"], ["-","-"], ["√ó", "*"], ["√∑","/"], ["%","%"], ["ùë•‚Åø","**"], ["<","<"], [">",">"], ["‚â§","<="], ["‚â•",">="], ["<<","<<"], ["‚Üí", "->"]]},
            {"type": "input_value", "name": "LHS", "check": ["Number", "Array", "UGen", "Boolean", "String"]},
            {"type": "input_value", "name": "RHS", "check": ["Number", "Array", "UGen", "Boolean", "String"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "BinaryOp(op, lhs, rhs): Binary operators"
    }
    ,
    {
        "type": "sc3_MulAdd",
        "message0": "%1 √ó %2 + %3",
        "args0": [
            {"type": "input_value", "name": "IN", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "MUL", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "ADD", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "MulAdd(in, mul, add): Multiply and add, i.e. in * mul + add.",
        "helpUrl": "https://doc.sccode.org/Classes/MulAdd.html"
    }
    ,
    {
        "type": "sc3_KeywordBinaryOp",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["amClip", "amClip"], ["&", "bitAnd"], ["|", "bitOr"], ["¬ª","bitShiftRight"], ["‚äè","clip2"], ["clump", "clump"], ["fromAssocArray","fromAssocArray"], ["‚è•", "lag"], ["‚è•‚è•", "lag2"], ["‚è•‚è•‚è•", "lag3"], ["‚åä", "min"], ["‚åà","max"], ["‚ÖÑ","mrg"], ["‚åä‚åâ","roundTo"], ["truncateTo","truncateTo"]]},
            {"type": "input_value", "name": "LHS", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "RHS", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "Keyword binary operators"
    }
    ,
    {
        "type": "sc3_Voicer",
        "message0": "Voicer %1 # %2 ùëì %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "COUNT", "check": "Number"},
            {"type": "input_value", "name": "PROC", "check": "Proc1"}
        ],
        "output": "UGen",
        "colour": 180,
        "tooltip": "Voicer(count, proc): Array of results of evaluating proc count times, each time receiving an event as argument"
    }
    ,
    {
        "type": "sc3_VoiceWriter",
        "message0": "VoiceWriter %1 # %2 ùëì %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "COUNT", "check": "Number"},
            {"type": "input_value", "name": "PROC", "check": "Proc1"}
        ],
        "output": "UGen",
        "colour": 180,
        "tooltip": "VoicerWriter(count, proc)"
    }
    ,
    {
        "type": "sc3_EventParam",
        "message0": "ùîº %1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "PARAM", "options": [["#", "v"], ["ùë§","w"], ["ùë•","x"], ["ùë¶", "y"], ["ùëß","z"], ["ùëú","o"], ["ùëüùë•","rx"], ["ùëüùë¶", "ry"], ["ùëù", "p"], ["ùëùùë•", "px"]]},
            {"type": "input_value", "name": "EVENT"}
        ],
        "output": "UGen",
        "colour": 60,
        "tooltip": "EventParam(param, event): Read voice event parameter"
    }
]
