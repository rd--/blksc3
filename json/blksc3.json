[
    {
        "type": "sc3_Comment",
        "message0": "“ %1",
        "args0": [
            {"type": "field_input", "name": "COMMENT", "text": ""}
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 300,
        "tooltip": "Comment(text): Workspace comment"
    }
    ,
    {
        "type": "sc3_Play",
        "message0": "⊳ %1",
        "args0": [
            {"type": "input_value", "name": "CODE",  "check": ["Array", "UGen"]}
        ],
        "previousStatement": null,
        "colour": 300,
        "tooltip": "Play(code): Play sound"
    }
    ,
    {
        "type": "sc3_Constant",
        "message0": "%1",
        "args0": [{"type": "field_dropdown", "name": "CONST", "options": [["π", "pi"], ["2×π", "twoPi"], ["𝑒", "e"], ["∞", "inf"]]}],
        "output": "Number",
        "colour": 230,
        "tooltip": "Constant(n): Mathematical constants, such as π."
    }
    ,
    {
        "type": "sc3_Value0",
        "message0": "⇐ 𝑓 %1",
        "args0": [
            {"type": "input_value", "name": "PROC", "check": ["Proc0"]}
        ],
        "output": null,
        "colour": 180,
        "tooltip": "Value(proc): Evaluate zero argument procedure"
    }
    ,
    {
        "type": "sc3_Value1",
        "message0": "⇐ 𝑓 %1 ∙ %2",
        "args0": [
            {"type": "input_value", "name": "PROC", "check": ["Proc1"]},
            {"type": "input_value", "name": "VALUE"}
        ],
        "output": null,
        "colour": 180,
        "tooltip": "Value(proc, value): Evaluate one argument procedure"
    }
    ,
    {
        "type": "sc3_Value2",
        "message0": "⇐ 𝑓 %1 ∙ %2 ∙ %3",
        "args0": [
            {"type": "input_value", "name": "PROC", "check": ["Proc2"]},
            {"type": "input_value", "name": "VALUE1"},
            {"type": "input_value", "name": "VALUE2"}
        ],
        "output": null,
        "colour": 180,
        "tooltip": "Value(proc, value): Evaluate one argument procedure"
    }
    ,
    {
        "type": "sc3_TimesRepeat",
        "message0": "# %1 𝑓 %2",
        "args0": [
            {"type": "input_value", "name": "COUNT", "check": "Number"},
            {"type": "input_value", "name": "PROC", "check": "Proc0"}
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 180,
        "tooltip": "TimesRepeat(count, proc): Repeat procedure indicated number of times"
    }
    ,
    {
        "type": "sc3_ArrayFromTo",
        "message0": "%1 … %2",
        "args0": [
            {"type": "input_value", "name": "FROM", "check": ["Number", "UGen"]},
            {"type": "input_value", "name": "TO", "check": ["Number", "UGen"]}
        ],
        "output": "Array",
        "colour": 260,
        "tooltip": "ArrayFromTo(from, to): Array of consecutive numbers"
    }
    ,
    {
        "type": "sc3_ArrayProc1",
        "message0": "%1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["→⛁","asLocalBuf"],  ["⚂","atRandom"], ["++","concatenation"], ["1º","first"], ["mean", "mean"], ["∏","product"], ["ᴙ","reversed"], ["2º","second"], ["size","size"], ["Σ","sum"], ["3º","third"], ["𝑹", "asRecord"], ["ᵀ","transposed"]]},
            {"type": "input_value", "name": "IN", "check": ["Array", "UGen"]}
        ],
        "output": null,
        "colour": 260,
        "tooltip": "ArrayProc1(op, in): Array functions"
    }
    ,
    {
        "type": "sc3_ArrayProc2",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["++","++"], ["⇛","collect"], ["☞","at"]]},
            {"type": "input_value", "name": "LHS"},
            {"type": "input_value", "name": "RHS"}
        ],
        "output": "UGen",
        "colour": 260,
        "tooltip": "ArrayProc2(op, lhs, rhs): Array binary functions"
    }
    ,
    {
        "type": "sc3_ArrayCollect",
        "message0": "%1 ⇛ %2",
        "args0": [
            {"type": "input_value", "name": "ARRAY", "check": ["Array", "UGen"]},
            {"type": "input_value", "name": "PROC", "check": "Proc1"}
        ],
        "output": "Array",
        "colour": 260,
        "tooltip": "ArrayCollect(array, proc): Collect over array by evaluating proc once for each place"
    }
    ,
    {
        "type": "sc3_UnaryOp",
        "message0": "%1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["|", "Abs"], ["⌈", "Ceiling"], ["clearBuf", "BufClear"], ["ν→♩", "CpsMidi"], ["cubed","Cubed"], ["㏈→×","DbAmp"], ["distort","Distort"], ["𝑒ⁿ","Exp"], ["⌊", "Floor"], ["kr","kr"], ["log","Log"], ["♩→ν", "MidiCps"], ["midiRatio", "MidiRatio"], ["-","Neg"], ["rand2","Rand2"], ["¹⁄","Recip"], ["⌊⌉","rounded"], ["∿","Sin"], ["soft⊏","SoftClip"], ["◠₂", "Splay2"], ["√","Sqrt"], ["tanh","Tanh"], ["₀¹→ν", "UnitCps"]]},
            {"type": "input_value", "name": "IN", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "UnaryOp(op, in): Unary operators"
    }
    ,
    {
        "type": "sc3_BinaryOp",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["+", "+"], ["-","-"], ["×", "*"], ["÷","/"], ["%","%"], ["𝑥ⁿ","**"], ["<","<"], [">",">"], ["≤","<="], ["≥",">="], ["<<","<<"], ["→", "->"]]},
            {"type": "input_value", "name": "LHS", "check": ["Number", "Array", "UGen", "Boolean", "String"]},
            {"type": "input_value", "name": "RHS", "check": ["Number", "Array", "UGen", "Boolean", "String"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "BinaryOp(op, lhs, rhs): Binary operators"
    }
    ,
    {
        "type": "sc3_MulAdd",
        "message0": "%1 × %2 + %3",
        "args0": [
            {"type": "input_value", "name": "IN", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "MUL", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "ADD", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "MulAdd(in, mul, add): Multiply and add, i.e. in * mul + add.",
        "helpUrl": "https://doc.sccode.org/Classes/MulAdd.html"
    }
    ,
    {
        "type": "sc3_KeywordBinaryOp",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["Am⊏", "AmClip"], ["&", "BitAnd"], ["|", "BitOr"], ["»","ShiftRight"], ["⊏","Clip2"], ["clump", "clump"], ["⏥", "Lag"], ["⏥⏥", "Lag2"], ["⏥⏥⏥", "Lag3"], ["⌊", "Min"], ["⌈","Max"], ["⅄","multipleRootGraph"], ["⌊⌉","RoundTo"], ["Trunc","Trunc"]]},
            {"type": "input_value", "name": "LHS", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "RHS", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "Keyword binary operators"
    }
    ,
    {
        "type": "sc3_Event",
        "message0": "𝔼 %1",
        "args0": [
            {"type": "input_value", "name": "FROM"}
        ],
        "output": null,
        "colour": 60,
        "tooltip": "Event(from): Construct voice event"
    },
    {
        "type": "sc3_EventParam",
        "message0": "𝔼 %1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "PARAM", "options": [["#", "v"], ["𝑤","w"], ["𝑥","x"], ["𝑦", "y"], ["𝑧","z"], ["𝘪","i"], ["𝘫","j"], ["𝘬", "k"], ["𝑝", "p"]]},
            {"type": "input_value", "name": "EVENT"}
        ],
        "output": "UGen",
        "colour": 60,
        "tooltip": "EventParam(param, event): Read voice event parameter"
    },
    {
        "type": "sc3_ControlField",
        "message0": "𝒞 %1",
        "args0": [
            {"type": "field_number", "name": "VALUE"}
        ],
        "output": "UGen",
        "colour": 60,
        "tooltip": "ControlField(initialValue)"
    }
]
