[
    {
        "type": "sc3_Association",
        "message0": "%1 ‚Üí %2",
        "args0": [
            {"type": "input_value", "name": "KEY"},
            {"type": "input_value", "name": "VALUE"}
        ],
        "output": "Association",
        "colour": "%{BKY_SC_EVENT_HUE}",
        "tooltip": "key -> value: Answer an association of key with value"
    }
    ,
    {
        "type": "sc3_ArrayCollect",
        "message0": "%1 ‚áõ %2",
        "args0": [
            {"type": "input_value", "name": "ARRAY", "check": ["Array", "UGen"]},
            {"type": "input_value", "name": "PROC", "check": "Proc1"}
        ],
        "output": "Array",
        "colour": "%{BKY_SC_ARRAY_HUE}",
        "tooltip": "array.collect(proc): Collect over array by evaluating proc once for each place"
    }
    ,
    {
        "type": "sc3_ArrayFill",
        "message0": "! %1 ùëì %2 # %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "PROC", "check": "Proc0"},
            {"type": "input_value", "name": "COUNT", "check": "Number"}
        ],
        "output": "Array",
        "colour": "%{BKY_SC_ARRAY_HUE}",
        "tooltip": "proc ! count: Array of count places, evaulate proc to generate each place"
    }
    ,
    {
        "type": "sc3_ArrayFromTo",
        "message0": "%1 ‚Ä¶ %2",
        "args0": [
            {"type": "input_value", "name": "FROM", "check": ["Number", "UGen"]},
            {"type": "input_value", "name": "TO", "check": ["Number", "UGen"]}
        ],
        "output": "Array",
        "colour": "%{BKY_SC_ARRAY_HUE}",
        "tooltip": "[from .. to]: Array of consecutive numbers"
    }
    ,
    {
        "type": "sc3_ArrayProc1",
        "message0": "%1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options":
			 [["‚Üí‚õÅ","asLocalBuf"], ["‚öÇ","atRandom"], ["++","concatenation"], ["1¬∫","first"],
			  ["mean", "mean"], ["‚àè","product"], ["·¥ô","reversed"], ["2¬∫","second"],
			  ["size","size"], ["Œ£","sum"], ["3¬∫","third"], ["ùëπ", "asRecord"], ["·µÄ","transposed"]]},
            {"type": "input_value", "name": "IN", "check": ["Array", "UGen"]}
        ],
        "output": null,
        "colour": "%{BKY_SC_ARRAY_HUE}",
        "tooltip": "ArrayProc1(op, in): Array functions"
    }
    ,
    {
        "type": "sc3_ArrayProc2",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options":
			 [["++","++"], ["‚áõ","collect"], ["‚òû","at"]]},
            {"type": "input_value", "name": "LHS", "check": ["Array", "UGen"]},
            {"type": "input_value", "name": "RHS"}
        ],
        "output": "UGen",
        "colour": "%{BKY_SC_ARRAY_HUE}",
        "tooltip": "ArrayProc2(op, lhs, rhs): Array binary functions"
    }
    ,
    {
        "type": "sc3_BinaryOp",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options":
			 [["+", "+"], ["-","-"], ["√ó", "*"], ["√∑","/"], ["%","%"], ["ùë•‚Åø","^"],
			  ["<","<"], [">",">"], ["‚â§","<="], ["‚â•",">="], ["<<","<<"]]},
            {"type": "input_value", "name": "LHS", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "RHS", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": "%{BKY_SC_MATH_HUE}",
        "tooltip": "BinaryOp(op, lhs, rhs): Binary operators"
    }
    ,
    {
        "type": "sc3_Comment",
        "message0": "‚Äú %1",
        "args0": [
            {"type": "field_input", "name": "COMMENT", "text": ""}
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": "%{BKY_SC_META_HUE}",
        "tooltip": "Comment(text): Workspace comment"
    }
    ,
    {
        "type": "sc3_ControlField",
        "message0": "ùíû %1",
        "args0": [
            {"type": "field_number", "name": "VALUE"}
        ],
        "output": "UGen",
        "colour": "%{BKY_SC_IO_HUE}",
        "tooltip": "ControlField(initialValue)"
    }
	,
    {
        "type": "sc3_Event",
        "message0": "ùîº %1",
        "args0": [
            {"type": "input_value", "name": "FROM"}
        ],
        "output": null,
        "colour": "%{BKY_SC_EVENT_HUE}",
        "tooltip": "Event(from): Construct voice event"
    }
	,
    {
        "type": "sc3_EventParam",
        "message0": "ùîº %1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "PARAM", "options":
			 [["#", "v"], ["ùë§","w"], ["ùë•","x"], ["ùë¶", "y"], ["ùëß","z"],
			  ["ùò™","i"], ["ùò´","j"], ["ùò¨", "k"], ["ùëù", "p"]]},
            {"type": "input_value", "name": "EVENT"}
        ],
        "output": "UGen",
        "colour": "%{BKY_SC_EVENT_HUE}",
        "tooltip": "EventParam(param, event): Read voice event parameter"
    }
	,
    {
        "type": "sc3_KeywordBinaryOp",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options":
			 [["Am‚äè", "AmClip"], ["&", "BitAnd"], ["|", "BitOr"], ["‚äè","Clip2"], ["clump", "clump"],
			  ["‚è•", "Lag"], ["‚è•‚è•", "Lag2"], ["‚è•‚è•‚è•", "Lag3"], ["‚åä", "Min"], ["‚åà","Max"],
			  ["‚ÖÑ","multipleRootGraph"], ["‚åä‚åâ","RoundTo"], ["¬ª","ShiftRight"], ["Trunc","Trunc"]]},
            {"type": "input_value", "name": "LHS", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "RHS", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": "%{BKY_SC_MATH_HUE}",
        "tooltip": "Keyword binary operators"
    }
    ,
    {
        "type": "sc3_LocalVoicer",
        "message0": "ùì• %1 ùëπ %2 ùëì %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "RECORD"},
            {"type": "input_value", "name": "PROC", "check": "Proc1"}
        ],
        "output": "UGen",
        "colour": "%{BKY_SC_EVENT_HUE}",
        "tooltip": "Voicer(map, proc): Array of results of evaluating proc at the channel expanded event record"
    }
    ,
    {
        "type": "sc3_MulAdd",
        "message0": "%1 √ó %2 + %3",
        "args0": [
            {"type": "input_value", "name": "IN", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "MUL", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "ADD", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": "%{BKY_SC_MATH_HUE}",
        "tooltip": "MulAdd(in, mul, add): Multiply and add, i.e. in * mul + add.",
        "helpUrl": "https://doc.sccode.org/Classes/MulAdd.html"
    }
    ,
    {
        "type": "sc3_OverlapTexture",
        "message0": "·®è %1 ùëì %2 ‚åí %3 ‚§¢ %4 # %5",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "PROC", "check": "Proc1"},
            {"type": "input_value", "name": "SUSTAINTIME", "check": "Number"},
            {"type": "input_value", "name": "TRANSITIONTIME", "check": "Number"},
            {"type": "input_value", "name": "OVERLAP", "check": "Number"}
        ],
        "output": "UGen",
        "colour": "%{BKY_SC_ITER_HUE}",
        "tooltip": "OverlapTexture(proc, sustainTime, transitionTime, overlap): Overlap add texture"
    }
    ,
    {
        "type": "sc3_Proc0",
        "message0": "Œª %1 ‚Üê %2",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc0",
        "colour": "%{BKY_SC_LAMBDA_HUE}",
        "tooltip": "Proc(return): Zero argument procedure"
    }
    ,
    {
        "type": "sc3_Proc0Stm",
        "message0": "Œª %1 ‚¶ô %2 ‚Üê %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_statement", "name": "STATEMENTS"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc0",
        "colour": "%{BKY_SC_LAMBDA_HUE}",
        "tooltip": "Proc(statements, return): Zero argument procedure, with statements"
    }
    ,
    {
        "type": "sc3_Proc1",
        "message0": "Œª %1 ‚çµ %2 ‚Üê %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "VAR"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc1",
        "colour": "%{BKY_SC_LAMBDA_HUE}",
        "tooltip": "Proc(var, return): One argument procedure setting arg to var"
    }
    ,
    {
        "type": "sc3_Proc1Stm",
        "message0": "Œª %1 ‚çµ %2 ‚¶ô %3 ‚Üê %4",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "VAR"},
            {"type": "input_statement", "name": "STATEMENTS"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc1",
        "colour": "%{BKY_SC_LAMBDA_HUE}",
        "tooltip": "Proc(var, statements, return): One argument procedure, with statements"
    }
    ,
    {
        "type": "sc3_Proc2",
        "message0": "Œª %1 ‚ç∫ %2 ‚çµ %3 ‚Üê %4",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "VAR1"},
            {"type": "input_value", "name": "VAR2"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc2",
        "colour": "%{BKY_SC_LAMBDA_HUE}",
        "tooltip": "Proc(var, var, return): Two argument procedure setting arg to var"
    }
    ,
    {
        "type": "sc3_Proc2Stm",
        "message0": "Œª %1 ‚ç∫ %2 ‚çµ %3 ‚¶ô %4 ‚Üê %5",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "VAR1"},
            {"type": "input_value", "name": "VAR2"},
            {"type": "input_statement", "name": "STATEMENTS"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc2",
        "colour": "%{BKY_SC_LAMBDA_HUE}",
        "tooltip": "Proc(var, var, statements, return): Two argument procedure, with statements"
    }
    ,
    {
        "type": "sc3_SoundFileBuffer",
        "message0": "SoundFileBuffer %1 ‚õÅ %2 # %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "SOUNDFILEID", "check": "String"},
            {"type": "input_value", "name": "NUMBEROFCHANNELS", "check": "Number"}
        ],
        "output": "UGen",
        "colour": "%{BKY_SC_IO_HUE}",
        "tooltip": "SoundFileBuffer(soundFileId, numberOfChannels): Fetch buffer index from cache, allocate and load if required"
    }
    ,
    {
        "type": "sc3_UnaryOp",
        "message0": "%1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options":
			 [["|", "Abs"], ["‚åà", "Ceiling"], ["clearBuf", "BufClear"],
			  ["ŒΩ‚Üí‚ô©", "CpsMidi"], ["cubed","Cubed"], ["„èà‚Üí√ó","DbAmp"], ["distort","Distort"],
			  ["ùëí‚Åø","Exp"], ["‚åä", "Floor"], ["kr","kr"], ["log","Log"], ["‚ô©‚ÜíŒΩ", "MidiCps"],
			  ["midiRatio", "MidiRatio"], ["-","Neg"], ["rand2","Rand2"], ["¬π‚ÅÑ","Recip"],
			  ["‚åä‚åâ","rounded"], ["‚àø","Sin"], ["soft‚äè","SoftClip"], ["‚ó†", "Splay"], ["‚àö","Sqrt"],
			  ["tanh","Tanh"], ["‚ÇÄ¬π‚ÜíŒΩ", "UnitCps"]]},
            {"type": "input_value", "name": "IN", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": "%{BKY_SC_MATH_HUE}",
        "tooltip": "UnaryOp(op, in): Unary operators"
    }
    ,
    {
        "type": "sc3_Voicer",
        "message0": "ùì• %1 P %2 # %3 ùëì %4",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "PART", "check": "Number"},
            {"type": "input_value", "name": "COUNT", "check": "Number"},
            {"type": "input_value", "name": "PROC", "check": "Proc1"}
        ],
        "output": "Array",
        "colour": "%{BKY_SC_EVENT_HUE}",
        "tooltip": "Voicer(count, proc): Array of results of evaluating proc count times, each time receiving an event as argument"
    }
    ,
    {
        "type": "sc3_VoiceWriter",
        "message0": "ùì•ùìå %1 P %2 # %3 ùëì %4",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "PART", "check": "Number"},
            {"type": "input_value", "name": "COUNT", "check": "Number"},
            {"type": "input_value", "name": "PROC", "check": "Proc0"}
        ],
        "output": "UGen",
        "colour": "%{BKY_SC_EVENT_HUE}",
        "tooltip": "VoicerWriter(count, proc)"
    }
	,
    {
        "type": "sc3_XFadeTexture",
        "message0": "·®è %1 ùëì %2 ‚åí %3 ‚§¢ %4",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "PROC", "check": "Proc1"},
            {"type": "input_value", "name": "SUSTAINTIME", "check": "Number"},
            {"type": "input_value", "name": "TRANSITIONTIME", "check": "Number"}
        ],
        "output": "UGen",
        "colour": "%{BKY_SC_ITER_HUE}",
        "tooltip": "XFadeTexture(proc, sustainTime, transitionTime): Crossfade and add texture"
    }
	,
    {
        "type": "sc3_Play",
        "message0": "‚ä≥ %1",
        "args0": [
            {"type": "input_value", "name": "CODE", "check": ["Array", "UGen"]}
        ],
        "previousStatement": null,
        "colour": "%{BKY_SC_META_HUE}",
        "tooltip": "Play(code): Play sound"
    }
    ,
    {
        "type": "sc3_Constant",
        "message0": "%1",
        "args0": [{"type": "field_dropdown", "name": "CONST", "options":
				   [["œÄ", "pi"], ["2√óœÄ", "twoPi"], ["ùëí", "e"], ["‚àû", "inf"]]}],
        "output": "Number",
        "colour": "%{BKY_SC_MATH_HUE}",
        "tooltip": "Constant(n): Mathematical constants, such as œÄ."
    }
    ,
    {
        "type": "sc3_Value0",
        "message0": "‚áê ùëì %1",
        "args0": [
            {"type": "input_value", "name": "PROC", "check": ["Proc0"]}
        ],
        "output": null,
        "colour": "%{BKY_SC_LAMBDA_HUE}",
        "tooltip": "Value(proc): Evaluate zero argument procedure"
    }
    ,
    {
        "type": "sc3_Value1",
        "message0": "‚áê ùëì %1 ‚àô %2",
        "args0": [
            {"type": "input_value", "name": "PROC", "check": ["Proc1"]},
            {"type": "input_value", "name": "VALUE"}
        ],
        "output": null,
        "colour": "%{BKY_SC_LAMBDA_HUE}",
        "tooltip": "Value(proc, value): Evaluate one argument procedure"
    }
    ,
    {
        "type": "sc3_Value2",
        "message0": "‚áê ùëì %1 ‚àô %2 ‚àô %3",
        "args0": [
            {"type": "input_value", "name": "PROC", "check": ["Proc2"]},
            {"type": "input_value", "name": "VALUE1"},
            {"type": "input_value", "name": "VALUE2"}
        ],
        "output": null,
        "colour": "%{BKY_SC_LAMBDA_HUE}",
        "tooltip": "Value(proc, value): Evaluate one argument procedure"
    }
    ,
    {
        "type": "sc3_TimesRepeat",
        "message0": "# %1 ùëì %2",
        "args0": [
            {"type": "input_value", "name": "COUNT", "check": "Number"},
            {"type": "input_value", "name": "PROC", "check": "Proc0"}
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": "%{BKY_SC_LAMBDA_HUE}",
        "tooltip": "TimesRepeat(count, proc): Repeat procedure indicated number of times"
    }
]
