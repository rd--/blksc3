[
    {
        "type": "sc3_Comment",
        "message0": "✐ %1",
        "args0": [
            {"type": "field_input", "name": "COMMENT", "text": ""}
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 300,
        "tooltip": "Comment(text): Workspace comment"
    }
    ,
    {
        "type": "sc3_Play",
        "message0": "🔊 %1",
        "args0": [
            {"type": "input_value", "name": "CODE",  "check": ["Array", "UGen"]}
        ],
        "previousStatement": null,
        "colour": 300,
        "tooltip": "Play(code): Play sound"
    }
    ,
    {
        "type": "sc3_Constant",
        "message0": "%1",
        "args0": [{"type": "field_dropdown", "name": "CONST", "options": [["π", "pi"], ["2×π", "twoPi"], ["𝑒", "e"], ["∞", "inf"]]}],
        "output": "Number",
        "colour": 230,
        "tooltip": "Mathematical constants, such as π."
    }
    ,
    {
        "type": "sc3_Proc0",
        "message0": "λ %1 ← %2",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc0",
        "colour": 180,
        "tooltip": "Make zero argument procedure with return block"
    }
    ,
    {
        "type": "sc3_Value0",
        "message0": "⇐ 𝑓 %1",
        "args0": [
            {"type": "input_value", "name": "PROC", "check": ["Proc0"]}
        ],
        "output": null,
        "colour": 180,
        "tooltip": "Evaluate zero argument procedure"
    }
    ,
    {
        "type": "sc3_Proc1",
        "message0": "λ %1 ⍵ %2 ← %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "VAR"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc1",
        "colour": 180,
        "tooltip": "Make one argument procedure with return block setting arg to var"
    }
    ,
    {
        "type": "sc3_Value1",
        "message0": "⇐ 𝑓 %1 ∙ %2",
        "args0": [
            {"type": "input_value", "name": "PROC", "check": ["Proc0"]},
            {"type": "input_value", "name": "VALUE"}
        ],
        "output": null,
        "colour": 180,
        "tooltip": "Evaluate one argument procedure"
    }
    ,
    {
        "type": "sc3_Proc0Stm",
        "message0": "λ %1 … %2 ← %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_statement", "name": "STATEMENTS"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc0",
        "colour": 180,
        "tooltip": "Make zero argument procedure with statements and return block"
    }
    ,
    {
        "type": "sc3_Proc1Stm",
        "message0": "λ %1 ⍵ %2 … %3 ← %4",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "VAR"},
            {"type": "input_statement", "name": "STATEMENTS"},
            {"type": "input_value", "name": "RETURN"}
        ],
        "output": "Proc1",
        "colour": 180,
        "tooltip": "Make one argument procedure with statements and return block"
    }
    ,
    {
        "type": "sc3_TimesRepeat",
        "message0": "# %1 𝑓 %2",
        "args0": [
            {"type": "input_value", "name": "COUNT", "check": "Number"},
            {"type": "input_value", "name": "PROC", "check": "Proc0"}
        ],
        "previousStatement": null,
        "nextStatement": null,
        "colour": 180,
        "tooltip": "TimesRepeat(count, proc): Repeat procedure indicated number of times"
    }
    ,
    {
        "type": "sc3_OverlapTexture",
        "message0": "ᨏ %1 𝑓 %2 ⌒ %3 ⤢ %4 # %5",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "PROC", "check": "Proc1"},
            {"type": "input_value", "name": "SUSTAINTIME", "check": "Number"},
            {"type": "input_value", "name": "TRANSITIONTIME", "check": "Number"},
            {"type": "input_value", "name": "OVERLAP", "check": "Number"}
        ],
        "output": "UGen",
        "colour": 180,
        "tooltip": "OverlapTexture(proc, sustainTime, transitionTime, overlap): Overlap add texture"
    }
    ,
    {
        "type": "sc3_ArrayFromTo",
        "message0": "%1 to %2",
        "args0": [
            {"type": "input_value", "name": "FROM", "check": ["Number", "UGen"]},
            {"type": "input_value", "name": "TO", "check": ["Number", "UGen"]}
        ],
        "output": "Array",
        "colour": 260,
        "tooltip": "List of consecutive numbers"
    }
    ,
    {
        "type": "sc3_ArrayFill",
        "message0": "! %1 𝑓 %2 # %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "PROC", "check": "Proc0"},
            {"type": "input_value", "name": "COUNT", "check": ["Number", "UGen"]}
        ],
        "output": "Array",
        "colour": 260,
        "tooltip": "Fill list by evaluating function once for each place"
    }
    ,
    {
        "type": "sc3_ArrayCollect",
        "message0": "%1 ⇛ %2",
        "args0": [
            {"type": "input_value", "name": "ARRAY", "check": ["Array", "UGen"]},
            {"type": "input_value", "name": "PROC", "check": "Proc1"}
        ],
        "output": "Array",
        "colour": 260,
        "tooltip": "Collect over ARRAY by evaluating PROC once for each place"
    }
    ,
    {
        "type": "sc3_ArrayAt",
        "message0": "%1 @ %2",
        "args0": [
            {"type": "input_value", "name": "ARRAY", "check": ["Array", "UGen"]},
            {"type": "input_value", "name": "INDEX", "check": ["Number"]}
        ],
        "output": "UGen",
        "colour": 260,
        "tooltip": "Element of list at index.  One is the first element."
    }
    ,
    {
        "type": "sc3_UnaryOp",
        "message0": "%1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["|", "abs"], ["asLocalBuf","asLocalBuf"], ["⌈", "ceil"], ["⚂","choose"], ["clearBuf", "clearBuf"], ["++","concatenation"], ["cubed","cubed"], ["㏈→×","dbamp"], ["distort","distort"], ["𝑒ⁿ","exp"], ["1º","first"], ["⌊", "floor"], ["kr","kr"], ["mean", "mean"], ["♩→ν", "midicps"], ["mix","mix"], ["-","negated"], ["∏","product"], ["¹⁄","reciprocal"], ["ᴙ","reverse"], ["⌊⌉","rounded"], ["2º","second"], ["∿","sin"], ["size","size"], ["softclip","softclip"], ["◠","splay"], ["√","sqrt"], ["Σ","sum"], ["tanh","tanh"], ["3º","third"], ["ᵀ","transpose"], ["₀¹→ν", "unitCps"], ["value", "value"]]},
            {"type": "input_value", "name": "IN", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "Unary operators"
    }
    ,
    {
        "type": "sc3_BinaryOp",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["+", "+"], ["-","-"], ["×", "*"], ["÷","/"], ["%","%"], ["𝑥ⁿ","**"], ["<","<"], [">",">"], ["≤","<="], ["≥",">="], ["<<","<<"], ["→", "->"]]},
            {"type": "input_value", "name": "LHS", "check": ["Number", "Array", "UGen", "Boolean", "String"]},
            {"type": "input_value", "name": "RHS", "check": ["Number", "Array", "UGen", "Boolean", "String"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "Binary operators"
    }
    ,
    {
        "type": "sc3_MulAdd",
        "message0": "%1 × %2 + %3",
        "args0": [
            {"type": "input_value", "name": "IN", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "MUL", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "ADD", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "Multiply add",
        "helpUrl": "https://doc.sccode.org/Classes/MulAdd.html"
    }
    ,
    {
        "type": "sc3_KeywordBinaryOp",
        "message0": "%2 %1 %3",
        "args0": [
            {"type": "field_dropdown", "name": "OP", "options": [["amclip", "amclip"], ["&", "bitAnd"], ["|", "bitOr"], ["»","bitShiftRight"], ["⊏","clip2"], ["clump", "clump"], ["fromAssocArray","fromAssocArray"], ["⏥", "lag"], ["⏥⏥", "lag2"], ["⏥⏥⏥", "lag3"], ["⌊", "min"], ["⌈","max"], ["⅄","mrg"], ["º","nth"], ["⌊⌉","roundTo"], ["value", "value"]]},
            {"type": "input_value", "name": "LHS", "check": ["Number", "Array", "UGen"]},
            {"type": "input_value", "name": "RHS", "check": ["Number", "Array", "UGen"]}
        ],
        "output": "UGen",
        "colour": 230,
        "tooltip": "Keyword binary operators"
    }
    ,
    {
        "type": "sc3_Voicer",
        "message0": "Voicer %1 # %2 𝑓 %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "COUNT", "check": "Number"},
            {"type": "input_value", "name": "PROC", "check": "Proc1"}
        ],
        "output": "UGen",
        "colour": 180,
        "tooltip": "Voicer"
    }
    ,
    {
        "type": "sc3_VoiceWriter",
        "message0": "VoiceWriter %1 # %2 𝑓 %3",
        "args0": [
            {"type": "input_dummy"},
            {"type": "input_value", "name": "COUNT", "check": "Number"},
            {"type": "input_value", "name": "PROC", "check": "Proc1"}
        ],
        "output": "UGen",
        "colour": 180,
        "tooltip": "Voicer"
    }
    ,
    {
        "type": "sc3_EventParam",
        "message0": "𝔼 %1 %2",
        "args0": [
            {"type": "field_dropdown", "name": "PARAM", "options": [["#", "v"], ["𝑤","w"], ["𝑥","x"], ["𝑦", "y"], ["𝑧","z"], ["𝑜","o"], ["𝑟𝑥","rx"], ["𝑟𝑦", "ry"], ["𝑝", "p"], ["𝑝𝑥", "px"]]},
            {"type": "input_value", "name": "EVENT"}
        ],
        "output": "UGen",
        "colour": 60,
        "tooltip": "Read voice event parameter"
    }
]
